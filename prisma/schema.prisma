// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String? @unique
  password       String?
  createdAt      DateTime @default(now())
  avatarUrl      String?
  roleId         String @db.ObjectId
  role           Role @relation(fields: [roleId], references: [id])
  posts          Post[]
}

model Role {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String?
  users User[]  
}

model Project {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  description   String?
  coverUrl      String?
  screenshots   String[]
  technologies  String[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  url           String?
  repoUrl       String?
}
model Post {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  title             String?
  coverUrl          String?
  lastModifiedDate  DateTime
  publishedDate     DateTime
  author            User @relation(fields: [authorId], references: [id])
  elements          PostElement[]
  authorId          String @db.ObjectId
  tags              String[]
  references        Json
}

model PostElement {
  id   String      @id @default(auto()) @map("_id") @db.ObjectId
  postId          String @db.ObjectId
  elementOrder    Int
  elementOptions  Json
  content         String?
  post            Post @relation(fields: [postId], references: [id])
}